{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","types/Status.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","length","map","todo","id","title","completed","classNames","type","name","onClick","TodoFilter","query","setQuery","todosStatus","setTodosStatus","onSubmit","e","preventDefault","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","Loader","TodoModal","onClose","userId","useState","user","setUser","isLoading","setIsLoading","useEffect","getUser","userFromServer","catch","error","Error","href","email","App","setTodos","visibleTodos","setVisibleTodos","todosItems","finally","filteredTodos","filter","Active","Completed","All","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.481a1d78.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.length\n        ? (\n          todos.map(todo => {\n            const { id, title, completed } = todo;\n\n            return (\n              <tr\n                key={id}\n                data-cy=\"todo\"\n                className={classNames({\n                  'has-background-info-light': id === selectedTodo?.id,\n                })}\n              >\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\">\n                  {completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames({\n                      'has-text-success': completed,\n                      'has-text-danger': !completed,\n                    })}\n                  >\n                    {title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    name=\"Show\"\n                    onClick={() => setSelectedTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={classNames('far', {\n                          'fa-eye-slash': id === selectedTodo?.id,\n                          'fa-eye': id !== selectedTodo?.id,\n                        })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })\n        ) : (\n          <tr>\n            <td className=\"has-text-danger\">\n              No matches found\n            </td>\n          </tr>\n        )}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string;\n  setQuery: (query: string) => void;\n  todosStatus: string;\n  setTodosStatus: (completed: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  todosStatus,\n  setTodosStatus,\n}) => {\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  };\n\n  const handleTodosStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodosStatus(event.target.value);\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleClearButton = () => setQuery('');\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={handleSubmit}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todosStatus}\n            onChange={handleTodosStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearButton}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Status {\n  Active = 'active',\n  Completed = 'completed',\n  All = 'all',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onClose: (todo: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(userId)\n      .then((userFromServer) => {\n        setUser(userFromServer);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [todosStatus, setTodosStatus] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosItems => setTodos(todosItems))\n      .catch(error => {\n        throw new Error(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    const filteredTodos = todos\n      .filter(todo => {\n        switch (todosStatus) {\n          case Status.Active:\n            return !todo.completed;\n\n          case Status.Completed:\n            return todo.completed;\n\n          case Status.All:\n          default:\n            return todo;\n        }\n      })\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n    setVisibleTodos(filteredTodos);\n  }, [todos, query, todosStatus]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                todosStatus={todosStatus}\n                setTodosStatus={setTodosStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}